add_test([=[BitArrayConstructorTest.ValidInitialization]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayConstructorTest.ValidInitialization]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayConstructorTest.ValidInitialization]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayConstructorTest.NegativeSizeThrows]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayConstructorTest.NegativeSizeThrows]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayConstructorTest.NegativeSizeThrows]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayConstructorTest.DefaultConstructor]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayConstructorTest.DefaultConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayConstructorTest.DefaultConstructor]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayMethodsTest.Swap]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayMethodsTest.Swap]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayMethodsTest.Swap]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayMethodsTest.Resize]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayMethodsTest.Resize]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayMethodsTest.Resize]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayMethodsTest.PushBack]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayMethodsTest.PushBack]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayMethodsTest.PushBack]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayMethodsTest.Clear]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayMethodsTest.Clear]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayMethodsTest.Clear]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayMethodsTest.SetAndReset]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayMethodsTest.SetAndReset]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayMethodsTest.SetAndReset]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.ANDOperator]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.ANDOperator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.ANDOperator]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.OROperator]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.OROperator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.OROperator]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.XOROperator]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.XOROperator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.XOROperator]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.NOTOperator]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.NOTOperator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.NOTOperator]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.RightShiftOperator]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.RightShiftOperator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.RightShiftOperator]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.LeftShiftOperator]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.LeftShiftOperator]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.LeftShiftOperator]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[BitArrayOperatorsTest.InvalidSizeForLogicalOperators]=]  [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests/BitArrayTest]==] [==[--gtest_filter=BitArrayOperatorsTest.InvalidSizeForLogicalOperators]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[BitArrayOperatorsTest.InvalidSizeForLogicalOperators]=]  PROPERTIES WORKING_DIRECTORY [==[/home/artem/Documents/2 course/Object-Oriented Programming/ex1/build/tests]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  BitArrayTest_TESTS BitArrayConstructorTest.ValidInitialization BitArrayConstructorTest.NegativeSizeThrows BitArrayConstructorTest.DefaultConstructor BitArrayMethodsTest.Swap BitArrayMethodsTest.Resize BitArrayMethodsTest.PushBack BitArrayMethodsTest.Clear BitArrayMethodsTest.SetAndReset BitArrayOperatorsTest.ANDOperator BitArrayOperatorsTest.OROperator BitArrayOperatorsTest.XOROperator BitArrayOperatorsTest.NOTOperator BitArrayOperatorsTest.RightShiftOperator BitArrayOperatorsTest.LeftShiftOperator BitArrayOperatorsTest.InvalidSizeForLogicalOperators)
